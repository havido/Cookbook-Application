Index: src/test/persistence/JsonReaderTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package persistence;\r\n\r\nimport model.IngredientCategories;\r\nimport model.RecipeLibrary;\r\nimport model.RecipeTag;\r\nimport org.junit.jupiter.api.Test;\r\n\r\nimport java.io.IOException;\r\n\r\nimport static org.junit.jupiter.api.Assertions.*;\r\nimport static org.junit.jupiter.api.Assertions.assertFalse;\r\n\r\npublic class JsonReaderTest extends JsonTest {\r\n\r\n    @Test\r\n    void testReaderNonExistentFile() {\r\n        JsonReader reader = new JsonReader(\"./data/noSuchFile.json\");\r\n        try {\r\n            RecipeLibrary library = reader.read();\r\n            fail(\"IOException expected\");\r\n        } catch (IOException e) {\r\n            // pass\r\n        }\r\n    }\r\n\r\n    @Test\r\n    void testReaderEmptyLibrary() {\r\n        JsonReader reader = new JsonReader(\"./data/testReaderEmptyLibrary.json\");\r\n        try {\r\n            RecipeLibrary library = reader.read();\r\n            assertEquals(0, library.numTotal());\r\n            assertEquals(0, library.numRecipesInLibrary());\r\n            assertEquals(0, library.numDrafts());\r\n        } catch (IOException e) {\r\n            fail(\"Couldn't read from file\");\r\n        }\r\n    }\r\n\r\n    @Test\r\n    void testReaderGeneralLibrary() {\r\n        JsonReader reader = new JsonReader(\"./data/testReaderGeneralLibrary.json\");\r\n        try {\r\n            RecipeLibrary library = reader.read();\r\n            // size of lists\r\n            assertEquals(2, library.getAllRecipes().size());\r\n            assertEquals(1, library.getLibrary().size());\r\n            assertEquals(1, library.getDrafts().size());\r\n\r\n            // check 5 fields\r\n            // Check ingredient list's size and whether it contains the correct ingredients\r\n            assertEquals(2, library.getLibrary().get(0).getIngredients().size());\r\n            assertEquals(2, library.getDrafts().get(0).getIngredients().size());\r\n            checkIngredient(library.getAllRecipes().get(0).getIngredients().get(0), IngredientCategories.NONE, \"ing1\");\r\n            checkIngredient(library.getAllRecipes().get(1).getIngredients().get(1), IngredientCategories.GLUTEN, \"ingb\");\r\n\r\n            // Check 5 fields of recipe\r\n            checkRecipe(library.getLibrary().get(0), RecipeTag.DEFAULT, \"Name1\", \"Author1\", 1, 10);\r\n            checkRecipe(library.getDrafts().get(0), RecipeTag.DRAFT, \"Name2\", \"Author2\", 2, 20);\r\n\r\n            // Check dietary requirements\r\n            assertTrue(library.getLibrary().get(0).getDietaryRequirements().contains(\"gluten-free\"));\r\n            assertFalse(library.getLibrary().get(0).getDietaryRequirements().contains(\"none\"));\r\n            assertTrue(library.getDrafts().get(0).getDietaryRequirements().contains(\"vegetarian\"));\r\n            assertFalse(library.getDrafts().get(0).getDietaryRequirements().contains(\"lactose-free\"));\r\n\r\n            // Check steps\r\n            assertTrue(library.getLibrary().get(0).getSteps().contains(\"test1\"));\r\n            assertFalse(library.getLibrary().get(0).getSteps().contains(\"test a\"));\r\n            assertTrue(library.getDrafts().get(0).getSteps().contains(\"test b\"));\r\n            assertFalse(library.getDrafts().get(0).getSteps().contains(\"test2\"));\r\n\r\n\r\n        } catch (IOException e) {\r\n            fail(\"Couldn't read from file\");\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/persistence/JsonReaderTest.java b/src/test/persistence/JsonReaderTest.java
--- a/src/test/persistence/JsonReaderTest.java	(revision 5e49456a7616d020a06107b4686121737a6d1b1b)
+++ b/src/test/persistence/JsonReaderTest.java	(date 1698450930136)
@@ -19,7 +19,7 @@
             RecipeLibrary library = reader.read();
             fail("IOException expected");
         } catch (IOException e) {
-            // pass
+            // pass the test
         }
     }
 
